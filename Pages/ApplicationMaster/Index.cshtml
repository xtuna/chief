@page
@model chief.Pages.ApplicationMaster.IndexModel
@{
    ViewData["Title"] = "Applications";
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Message"]
    </div>
}

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Applications</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }

        h1 {
            color: #000;
            text-align: left;
            font-size: 2rem;
            font-weight: bold;
        }

        .tab-container {
            display: flex;
            justify-content: flex-start;
            margin-bottom: 20px;
        }

        .tab {
            padding: 10px 20px;
            font-weight: bold;
            cursor: pointer;
            background-color: #f1f1f1;
            border: none;
            outline: none;
            transition: background-color 0.3s ease;
        }

            .tab.active {
                background-color: #7B0000;
                color: white;
            }

        table {
            width: 100%;
            margin: 0 auto;
            border-collapse: collapse;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #D9D9D9;
            border-radius: 8px;
            overflow: hidden;
        }

        thead {
            background-color: #7B0000;
            color: white;
            text-align: center;
            font-weight: bold;
        }

        th, td {
            padding: 16px;
            text-align: left;
            font-size: 14px;
            border-bottom: 1px solid #ddd;
        }

        tbody tr:nth-child(even) {
            background-color: #f4f4f4;
        }

        tbody tr:hover {
            background-color: #f1f1f1;
        }

        .assign-btn {
            padding: 8px 16px;
            background-color: #ffc107;
            color: black;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

            .assign-btn:hover {
                background-color: #e0a800;
            }

        .days-dropdown {
            padding: 8px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .status-btn {
            padding: 8px 16px;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            font-weight: bold;
            cursor: default;
            color: white;
        }

            .status-btn.pending {
                background-color: gray;
            }

            .status-btn.approved {
                background-color: green;
            }

            .status-btn.rejected {
                background-color: red;
            }

            .status-btn.unknown {
                background-color: darkgray;
            }

        .icon-eye {
            font-size: 20px;
            cursor: pointer;
        }

        .actions-column a {
            color: #7B0000;
            font-weight: bold;
            text-decoration: none;
            padding-right: 10px;
        }

            .actions-column a:hover {
                text-decoration: underline;
            }
    </style>
</head>
<body>

    <h1>Applications</h1>

    <div class="tab-container">
        <button class="tab active" id="activeTab" onclick="showTab('active')">Active Applications</button>
        <button class="tab" id="completedTab" onclick="showTab('completed')">Completed Applications</button>
    </div>

    @foreach (var application in Model.PendingApplications)
    {

    }

    <!-- Active Applications -->
    <div id="activeApplications" class="tab-content">
        <table class="table">
            <thead style="text-align: center;">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].DTSNumber)</th>
                    <th>Details</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].Evaluators)</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].DaysToEvaluate)</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].Status)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.PendingApplications)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DTSNumber)
                        </td>
                        <td>
                            <div>
                                <strong>Application:</strong> @Html.DisplayFor(modelItem => item.ApplicationName) <br />
                                <strong>User Type:</strong> @Html.DisplayFor(modelItem => item.UserType) <br />
                                <strong>Applicant Name:</strong> @Html.DisplayFor(modelItem => item.ApplicantName) <br />
                                <strong>Filed Date:</strong> @Html.DisplayFor(modelItem => item.FiledDate)
                            </div>
                        </td>
                        <td>
                            <div style="display: flex; flex-direction: column;">
                                @Html.DisplayFor(modelItem => item.Evaluators)
                                <button class="assign-btn" style="margin-top: 10px;" data-bs-toggle="modal" data-bs-target="#assignEvaluatorModal">Assign Evaluator</button>
                            </div>
                        </td>
                        <td>
                            <select class="days-dropdown" onchange="updateDaysToEvaluate(@item.Id, this.value)">
                                @for (int i = 3; i <= 10; i += 1)
                                {
                                    if (item.DaysToEvaluate == i)
                                    {
                                        <option value="@i" selected="selected">@i days</option>
                                    }
                                    else
                                    {
                                        <option value="@i">@i days</option>
                                    }
                                }
                            </select>
                        </td>

                        <td>
                            @if (item.Status == "Pending" || item.Status == "Approved" || item.Status == "Rejected" || item.Status == "Unknown")
                            {
                                <a asp-page="./EvalDetails" asp-route-id="@item.Id" asp-route-status="@item.Status">
                                    <button class="status-btn @(item.Status.ToLower())">@item.Status</button>
                                </a>
                            }
                        </td>


                        <td class="actions-column">
                            <a asp-page="./Details" asp-route-id="@item.Id" title="View Details">
                                <i class="fas fa-eye" style="color: black;"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Evaluator Assignment Modal -->
    <div class="modal fade" id="assignEvaluatorModal" tabindex="-1" aria-labelledby="assignEvaluatorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" style="background-color: #A01E12; color: white;">
                <div class="modal-header">
                    <h5 class="modal-title" id="assignEvaluatorModalLabel" style="color: #FDC536; font-weight: bold;">LIST OF EVALUATORS</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="text-center mb-3" style="font-size: 18px; font-weight: bold;">
                        COMPUTER SCIENCE, INFORMATION SYSTEMS, AND TECHNOLOGY
                    </div>

                    <!-- Recommended Evaluators Section -->
                    <div class="mb-3">
                        <div class="text-left" style="font-size: 16px; font-weight: bold;">Recommended:</div>
                        <div class="row">
                            <!-- Example Evaluator Card -->
                            @for (int i = 0; i < 4; i++)
                            {
                                <div class="col-md-3 mb-3">
                                    <div class="card h-100 text-center" style="background-color: #FFFFFF; color: black;">
                                        <div class="card-body">
                                            <img src="https://via.placeholder.com/50" class="rounded-circle mb-3" alt="Evaluator" />
                                            <h5 class="card-title">Evaluator Name</h5>
                                            <p class="card-text">Specialization</p>
                                            <hr />
                                            <div class="d-flex justify-content-between">
                                                <div>Completed: 5</div>
                                                <div>Pending: 3</div>
                                                <div>Declined: 1</div>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button class="btn btn-warning w-100">ASSIGN</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Other Evaluators Section -->
                    <div class="mb-3">
                        <div class="text-left" style="font-size: 16px; font-weight: bold;">Other Evaluators:</div>
                        <div class="row">
                            <!-- Example Evaluator Card -->
                            @for (int i = 0; i < 6; i++)
                            {
                                <div class="col-md-3 mb-3">
                                    <div class="card h-100 text-center" style="background-color: #FFFFFF; color: black;">
                                        <div class="card-body">
                                            <img src="https://via.placeholder.com/50" class="rounded-circle mb-3" alt="Evaluator" />
                                            <h5 class="card-title">Evaluator Name</h5>
                                            <p class="card-text">Specialization</p>
                                            <hr />
                                            <div class="d-flex justify-content-between">
                                                <div>Completed: 20</div>
                                                <div>Pending: 4</div>
                                                <div>Declined: 3</div>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button class="btn btn-warning w-100">ASSIGN</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- See More Button -->
                    <div class="text-end">
                        <a href="#" class="text-white" style="font-size: 16px;">See more</a>
                    </div>
                </div>
            </div>
        </div>
    </div>


    @foreach (var application in Model.CompletedApplications)
    {

    }

    <!-- Completed Applications-->
    <div id="completedApplications" class="tab-content" style="display: none;">
        <table class="table">
            <thead style="text-align: center;">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].DTSNumber)</th>
                    <th>Details</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].Evaluators)</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].DaysToEvaluate)</th>
                    <th>@Html.DisplayNameFor(model => model.PendingApplications[0].Status)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- filter applications by approve or reject status -->
                @foreach (var item in Model.CompletedApplications)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DTSNumber)
                        </td>
                        <td>
                            <div>
                                <strong>Application:</strong> @Html.DisplayFor(modelItem => item.ApplicationName) <br />
                                <strong>User Type:</strong> @Html.DisplayFor(modelItem => item.UserType) <br />
                                <strong>Applicant Name:</strong> @Html.DisplayFor(modelItem => item.ApplicantName) <br />
                                <strong>Filed Date:</strong> @Html.DisplayFor(modelItem => item.FiledDate)
                            </div>
                        </td>
                        <td>
                            <div style="display: flex; flex-direction: column;">
                                @Html.DisplayFor(modelItem => item.Evaluators)
                            </div>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DaysToEvaluate)
                        </td>
                        <td>
                            @if (item.Status == "Approved" || item.Status == "Rejected")
                            {
                                <a asp-page="./EvalDetails" asp-route-id="@item.Id" asp-route-status="@item.Status">
                                    <button class="status-btn @(item.Status.ToLower())">@item.Status</button>
                                </a>
                            }
                            }
                        </td>
                        <td class="actions-column">
                            <button type="button" class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#hardCopyModal">
                                Hard Copy Received
                            </button>

                            <a asp-page="./Endorse" asp-route-id="@item.Id" asp-route-status="@item.Status">
                                <button class="status-btn">Endorse</button>
                            </a>

                        </td>
                    </tr>

                    <!-- Modal Structure for Hard Copy Received -->
                    <div class="modal fade" id="hardCopyModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Notice</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <div class="d-flex justify-content-center">
                                        <div class="alert alert-danger" role="alert">
                                            <i class="fas fa-exclamation-circle"></i> Do you received the hard copy of documents?
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                    <button type="button" class="btn btn-warning" onclick="confirmHardCopyReceived()">Confirm</button>
                                </div>
                            </div>
                        </div>
                    </div>

                }

            </tbody>
        </table>
    </div>



    <script>
            function loadEvaluatorList(applicationId) {
                // Fetch evaluator list from server (this is a mockup; replace with actual server call)
                const evaluators = [
                    { id: 1, name: 'Evaluator 1' },
                    { id: 2, name: 'Evaluator 2' },
                    { id: 3, name: 'Evaluator 3' }
                ];

                const evaluatorList = document.getElementById('evaluatorList');
                evaluatorList.innerHTML = ''; // Clear any existing list items

                evaluators.forEach(evaluator => {
                    const listItem = document.createElement('li');
                    listItem.classList.add('list-group-item');
                    listItem.innerHTML = `
                                <input type="radio" name="selectedEvaluator" value="${evaluator.id}" />
                                ${evaluator.name}
                            `;
                    evaluatorList.appendChild(listItem);
                });
            }

            function assignEvaluator() {
                const selectedEvaluator = document.querySelector('input[name="selectedEvaluator"]:checked');
                if (selectedEvaluator) {
                    const evaluatorId = selectedEvaluator.value;
                    // Send the selected evaluator ID and application ID to the server (using fetch, for example)
                    console.log('Evaluator assigned:', evaluatorId);
                    // Close the modal after assignment
                    const modal = document.getElementById('assignEvaluatorModal');
                    const bootstrapModal = bootstrap.Modal.getInstance(modal);
                    bootstrapModal.hide();
                } else {
                    alert('Please select an evaluator');
                }
            }
        function updateDaysToEvaluate(applicationId, selectedDays) {
            const data = {
                id: applicationId,  // ID of the application
                daysToEvaluate: selectedDays  // Number of selected days
            };

            fetch('/ApplicationMaster/UpdateDaysToEvaluate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value // CSRF token, if needed
                },
                body: JSON.stringify(data)
            })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        alert('Days to Evaluate updated successfully.');
                        location.reload();  // Optionally reload the page to reflect changes
                    } else {
                        console.error('Failed to update Days to Evaluate');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

            function showTab(tabName) {
                const activeTab = document.getElementById('activeTab');
                const completedTab = document.getElementById('completedTab');
                const activeApplications = document.getElementById('activeApplications');
                const completedApplications = document.getElementById('completedApplications');

                if (tabName === 'active') {
                    activeTab.classList.add('active');
                    completedTab.classList.remove('active');
                    activeApplications.style.display = 'block';
                    completedApplications.style.display = 'none';
                } else {
                    completedTab.classList.add('active');
                    activeTab.classList.remove('active');
                    completedApplications.style.display = 'block';
                    activeApplications.style.display = 'none';
                }

                localStorage.setItem('activeTab', tabName); // Store tab state
            }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

</body>
</html>