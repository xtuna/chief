@page
@model chief.Pages.ApplicationMaster.EditModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Application</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Application.Id" />
            <div class="form-group">
                <label asp-for="Application.DTSNumber" class="control-label"></label>
                <input asp-for="Application.DTSNumber" class="form-control" />
                <span asp-validation-for="Application.DTSNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.ApplicationName" class="control-label"></label>
                <input asp-for="Application.ApplicationName" class="form-control" />
                <span asp-validation-for="Application.ApplicationName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.UserType" class="control-label"></label>
                <input asp-for="Application.UserType" class="form-control" />
                <span asp-validation-for="Application.UserType" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.ApplicantName" class="control-label"></label>
                <input asp-for="Application.ApplicantName" class="form-control" />
                <span asp-validation-for="Application.ApplicantName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.FiledDate" class="control-label"></label>
                <input asp-for="Application.FiledDate" class="form-control" />
                <span asp-validation-for="Application.FiledDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.Evaluators" class="control-label"></label>
                <input asp-for="Application.Evaluators" class="form-control" />
                <span asp-validation-for="Application.Evaluators" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.DaysToEvaluate" class="control-label"></label>
                <input asp-for="Application.DaysToEvaluate" class="form-control" />
                <span asp-validation-for="Application.DaysToEvaluate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Application.Status" class="control-label"></label>
                <input asp-for="Application.Status" class="form-control" />
                <span asp-validation-for="Application.Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    function updateDaysToEvaluate(applicationId, selectedDays) {
    // Create a JSON object to send to the server
    const data = {
        id: applicationId,
        daysToEvaluate: selectedDays
    };

    // Send the request to the backend using Fetch API
    fetch('/ApplicationMaster/UpdateDaysToEvaluate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value // CSRF token
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (response.ok) {
            return response.json();
        } else {
            throw new Error('Failed to update Days to Evaluate');
        }
    })
    .then(result => {
        console.log('Update successful:', result);
        // Optionally, reload the page or update the UI dynamically
        location.reload(); // To refresh the applications list with updated values
    })
    .catch(error => {
        console.error('Error:', error);
        // Optionally, display an error message to the user
    });
}

}
