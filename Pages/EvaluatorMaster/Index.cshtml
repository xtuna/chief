@page
@model chief.Pages.EvaluatorMaster.IndexModel

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Applications</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f9f9f9;
            margin: 0;
            padding: 20px;
        }

        h1 {
            color: #000;
            text-align: left;
            font-size: 2rem;
            font-weight: bold;
        }

        table {
            width: 100%;
            margin: 0 auto;
            border-collapse: collapse;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #D9D9D9;
            border-radius: 8px;
            overflow: hidden;
        }

        thead {
            background-color: #7B0000;
            color: white;
            text-align: center;
            font-weight: bold;
        }

        th, td {
            padding: 16px;
            text-align: left;
            font-size: 14px;
            border-bottom: 1px solid #ddd;
        }

        tbody tr:nth-child(even) {
            background-color: #f4f4f4;
        }

        tbody tr:hover {
            background-color: #f1f1f1;
        }

        /* Status Button and Dropdown Styles */
        .status-container {
            display: flex;
            align-items: center;
        }

        .status-dropdown {
            width: 150px;
            padding: 5px;
            font-weight: bold;
            border: 1px solid transparent;
            border-radius: 5px;
            cursor: pointer;
        }

            .status-dropdown option {
                font-weight: bold;
            }

        .status-container .active-status {
            background-color: #28a745; /* Green */
            color: white;
        }

        .status-container .inactive-status {
            background-color: #6c757d; /* Gray */
            color: white;
        }

        /* Hover and Focus Styles */
        .status-dropdown:focus {
            outline: none;
            border: 1px solid #7B0000; /* Change border on focus */
        }

        .profile-btn {
            background-color: transparent;
            border: none;
            cursor: pointer;
            font-size: 1.2em;
        }
    </style>
</head>
<body>
    <h1>Manage Evaluator</h1>
    <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Evaluator[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Evaluator[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Evaluator[0].Specialization)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Evaluator[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Evaluator[0].Status)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Evaluator) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Specialization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @if (item.Status == "Active")
                {
                    <select class="status-dropdown active-status" onchange="updateStatus(this, @item.Id)">
                        <option value="Active" selected>Active</option>
                        <option value="Inactive">Inactive</option>
                    </select>
                }
                else
                {
                    <select class="status-dropdown inactive-status" onchange="updateStatus(this, @item.Id)">
                        <option value="Active">Active</option>
                        <option value="Inactive" selected>Inactive</option>
                    </select>
                }
            </td>
            <td>
                <button type="button" class="profile-btn" onclick="openProfile(@item.Id)">
                    <i class="fa fa-user"></i>
                </button>
            </td>

        </tr>
}
        </tbody>
    </table>
    <script>
        function updateStatus(element, evaluatorId) {
            // Handle the status change logic here (e.g., send AJAX request to the server)
            alert(`Status of evaluator with ID ${evaluatorId} changed to: ${element.value}`);
        }

        function openProfile(evaluatorId) {
            // Handle the profile opening logic here
            alert(`Opening profile for evaluator with ID ${evaluatorId}`);
        }
    </script>
</body>
</html>
